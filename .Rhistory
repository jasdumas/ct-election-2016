"med_property_value",
"avg_commute_time",
"commute_travel_type")
View(ct_econ)
colnames(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"num_households",
"med_property_value",
"avg_commute_time",
"commute_travel_type")
names(ct_econ)
names(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"num_households",
"med_property_value",
"avg_commute_time",
"commute_travel_type")
names(ct_econ)[1] <- "med_house_income14"
fairfield_econ <- fairfield_econ %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()[1:9, 17, 22, 24, 25, 26]
fairfield_econ <- read_html("https://datausa.io/profile/geo/fairfield-county-ct/")
fairfield_econ <- fairfield_econ %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()[1:9, 17, 22, 24, 25, 26]
fairfield_econ[c(1:9, 17, 22, 24, 25, 26)]
fairfield_econ <- fairfield_econ %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
fairfield_econ[c(1:9, 17, 22, 24, 25, 26)]
fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ]
fairfield_econ <- fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ]
fairfield_econ
ct_econ <- data.frame()
names(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"num_households",
"med_property_value",
"avg_commute_time",
"commute_travel_type")
fairfield_econ <- as.data.frame(fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ])
fairfield_econ <- data.frame(fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ])
rm(fairfield_econ)
fairfield_econ <- read_html("https://datausa.io/profile/geo/fairfield-county-ct/") %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
View(fairfield_econ)
fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ]
rm(fairfield_econ)
fairfield_econ <- read_html("https://datausa.io/profile/geo/fairfield-county-ct/") %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()[c(1:9, 17, 22, 24, 25, 26), ]
fairfield_econ <- fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ]
fairfield_econ <- read_html("https://datausa.io/profile/geo/fairfield-county-ct/") %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
fairfield_econ <- fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ]
fairfield_econ <- read_html("https://datausa.io/profile/geo/fairfield-county-ct/") %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
View(fairfield_econ)
View(fairfield_econ)
fairfield_econ[3]
fairfield_econ[3,]
fairfield_econ <- data.frame(fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ])
View(fairfield_econ)
ct_econ <- data.frame()
names(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"num_households",
"med_property_value",
"avg_commute_time",
"commute_travel_type")
library(tidyr)
?spread
?cast
library(plyr)
?cast
?melt
?melt
?data.frame
county_urls <- c("https://datausa.io/profile/geo/fairfield-county-ct/",
"https://datausa.io/profile/geo/hartford-county-ct/",
"https://datausa.io/profile/geo/litchfield-county-ct/",
"https://datausa.io/profile/geo/middlesex-county-ct/",
"https://datausa.io/profile/geo/new-haven-county-ct/",
"https://datausa.io/profile/geo/new-london-county-ct/",
"https://datausa.io/profile/geo/tolland-county-ct/",
"https://datausa.io/profile/geo/windham-county-ct/")
for (i in county_urls){
table <- read_html(i) %>% html_table(fill=TRUE) %>% as.data.frame()
# append to a master data frame
ct_econ <- cbind(ct_econ, table)
}
for (i in county_urls){
table <- read_html(i) %>% html_table(fill=TRUE) %>% as.data.frame()
# append to a master data frame
# ct_econ <- rbind(ct_econ, table)
}
table
for (i in county_urls){
table <- read_html(i) %>% html_nodes(".stat-text+ .stat-value .stat-span") %>% as.data.frame()
# append to a master data frame
# ct_econ <- rbind(ct_econ, table)
}
table
for (i in county_urls){
table <- read_html(i) %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
# append to a master data frame
# ct_econ <- rbind(ct_econ, table)
}
View(table)
View(table)
melt(fairfield_econ)
?cast
?melt
spread
?spread
unique(ct_results$county)
for (i in county_urls){
table <- read_html(i) %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
table_keep <- data.frame(table[c(1:9, 17, 22, 24, 25, 26), ])
# append to a master data frame
ct_econ <- rbind(ct_econ, table_keep)
}
View(ct_econ)
x = rep(1, 14)
x
data.frame(x)
data.frame(y = x)
ct_econ <- data.frame(matrix(ncol=14, nrow = 0))
View(ct_econ)
colnames(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"num_households",
"med_property_value",
"avg_commute_time",
"commute_travel_type")
ct_econ
for (i in county_urls){
table <- read_html(i) %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
table_keep <- data.frame(table[c(1:9, 17, 22, 24, 25, 26), ])
# append to a master data frame
ct_econ <- rbind(ct_econ, table_keep)
}
View(ct_econ)
ct_econ <- data.frame(matrix(ncol=14, nrow = 0))
# add column names / mentally choose which values to keep
colnames(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"num_households",
"med_property_value",
"avg_commute_time",
"commute_travel_type")
fairfield_econ <- read_html("https://datausa.io/profile/geo/fairfield-county-ct/") %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
View(fairfield_econ)
fairfield_econ <- data.frame(fairfield_econ[c(1:9, 17, 22, 24, 25, 26), ])
melt(fairfield_econ)
as.vector(fairfield_econ)
t(fairfield_econ)
ct_econ <- data.frame(matrix(ncol=14, nrow = 0))
# add column names / mentally choose which values to keep
colnames(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"num_households",
"med_property_value",
"avg_commute_time",
"commute_travel_type")
for (i in county_urls){
table <- read_html(i) %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
table_keep <- t(data.frame(table[c(1:9, 17, 22, 24, 25, 26), ]))
# append to a master data frame
ct_econ <- rbind(ct_econ, table_keep)
}
colnames(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"num_households",
"med_property_value",
"avg_commute_time",
"commute_travel_type")
ct_econ <- data.frame(matrix(ncol=10, nrow = 0))
colnames(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major" ) #,
for (i in county_urls){
table <- read_html(i) %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
table_keep <- t(data.frame(table[c(1:9, 17), ]))
# append to a master data frame
ct_econ <- rbind(ct_econ, table_keep)
}
ct_econ <- data.frame(matrix(ncol=11, nrow = 0))
for (i in county_urls){
table <- read_html(i) %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
# transpose into rows!
table_keep <- t(data.frame(table[c(1:9, 17), ]))
# append to a master data frame
ct_econ <- rbind(ct_econ, table_keep)
}
colnames(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major",
"county")
ct_econ$county <- c("Fairfield", "Fartford", "Litchfield", "Middlesex",
"New Haven", "New London", "Tolland", "Windham")
View(ct_results)
rownames(ct_econ)
rownames(ct_econ) <- ""
ct_econ <- data.frame(matrix(ncol=10, nrow = 0))
ct_econ <- data.frame(matrix(ncol=10, nrow = 0))
for (i in county_urls){
table <- read_html(i) %>%
html_nodes(".stat-text+ .stat-value .stat-span") %>%
html_text() %>%
data.frame()
# transpose into rows!
table_keep <- t(data.frame(table[c(1:9, 17), ]))
# append to a master data frame
ct_econ <- rbind(ct_econ, table_keep)
}
colnames(ct_econ) <- c("med_house_income14",
"avg_male_income",
"avg_female_income",
"highest_income_race",
"wage_gini",
"largest_demo_poverty",
"largest_race_poverty",
"med_native_age",
"med_foreign_age",
"common_major")
ct_econ$county <- c("Fairfield", "Fartford", "Litchfield", "Middlesex",
"New Haven", "New London", "Tolland", "Windham")
ct_join <-  dplyr::full_join(ct_results, ct_econ)
View(ct_join)
ct_econ$county <- c("Fairfield", "Hartford", "Litchfield", "Middlesex",
"New Haven", "New London", "Tolland", "Windham")
ct_join <-  dplyr::full_join(ct_results, ct_econ)
ct_shp2 <- dplyr::full_join(ct_shp@data, ct_join)
View(ct_shp)
View(ct_shp2)
pal <- colorBin(palette = "BuPu", domain = ct_shp2$total, bins = 8)
state_popup <- paste0("<strong>County: </strong>",
ct_shp2$county,
"<br><strong>Median Household Income: </strong>",
ct_shp2$med_house_income14,
"<br><strong>Average Female Income: </strong>",
ct_shp2$avg_female_income)
leaflet(data = ct_shp2) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(total),
fillOpacity = 0.7,
color = "#BDBDC3",
weight = 1,
popup = state_popup) %>%
addLegend("bottomleft",
pal = pal,
values = ~total,
title = "Total Votes Density",
opacity = 1)
View(ct_shp)
ct_shp2 <- sp::merge(x = ct_shp2, y = ct_join, all.x = F)
leaflet(data = ct_shp2) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(total),
fillOpacity = 0.7,
color = "#BDBDC3",
weight = 1,
popup = state_popup) %>%
addLegend("bottomleft",
pal = pal,
values = ~total,
title = "Total Votes Density",
opacity = 1)
View(ct_shp)
rm(ct_shp2)
ct_shp2 <- sp::merge(x = ct_shp, y = ct_join, all.x = F)
ct_shp2 <- sp::merge(x = ct_shp, y = ct_join)
View(ct_join)
ct_shp2 <- sp::merge(x = ct_shp, y = ct_join, all.x = F)
ct_shp2 <- sp::merge(x = ct_shp, y = ct_join, duplicateGeoms=TRUE)
View(ct_shp2)
pal <- colorBin(palette = "BuPu", domain = ct_shp2$total, bins = 8)
pal
state_popup <- paste0("<strong>County: </strong>",
ct_shp2$county,
"<br><strong>Median Household Income: </strong>",
ct_shp2$med_house_income14,
"<br><strong>Average Female Income: </strong>",
ct_shp2$avg_female_income)
leaflet(data = ct_shp2) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(total),
fillOpacity = 0.7,
color = "#BDBDC3",
weight = 1,
popup = state_popup) %>%
addLegend("bottomleft",
pal = pal,
values = ~total,
title = "Total Votes Density",
opacity = 1)
HRC <- select(ct_shp2, cand_name == "Hillary Clinton")
HRC <- select(ct_shp2@data, cand_name == "Hillary Clinton")
leaflet(data = ct_shp2) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(unique(total)),
fillOpacity = 0.7,
color = "#BDBDC3",
weight = 1,
popup = state_popup) %>%
addLegend("bottomleft",
pal = pal,
values = ~unique(total),
title = "Total Votes Density",
opacity = 1)
HRC <- ct_shp2@data[, ct_shp2@data$cand_name == "Hillary Clinton"]
HRC <- ct_shp2@data[ct_shp2@data$cand_name == "Hillary Clinton",]
View(HRC)
ct_shp2@data <- HRC
View(ct_results)
pal <- colorBin(palette = "BuPu", domain = ct_shp2$votes, bins = 8)
state_popup <- paste0("<strong>County: </strong>",
ct_shp2$county,
"<br><strong>Median Household Income: </strong>",
ct_shp2$med_house_income14,
"<br><strong>Average Female Income: </strong>",
ct_shp2$avg_female_income)
leaflet(data = ct_shp2) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(votes),
fillOpacity = 0.7,
color = "#BDBDC3",
weight = 1,
popup = state_popup) %>%
addLegend("bottomleft",
pal = pal,
values = ~votes,
title = "Total Votes",
opacity = 1)
tmp2 = tempdir()
#url2 = "http://www2.census.gov/geo/tiger/GENZ2015/shp/cb_2015_09_county_within_ua_500k.zip"
url2 = "http://www2.census.gov/geo/tiger/GENZ2015/shp/cb_2015_us_county_500k.zip"
file <- basename(url2)
download.file(url2, file)
unzip(file, exdir = tmp2)
ct_shp <- readOGR(dsn = tmp2, layer = "cb_2015_09_county_within_ua_500k", encoding = "UTF-8")
dim(ct_shp)
class(ct_shp) # the human data is located at ct_shp@data
View(ct_shp)
ct_shp@data$fips <- paste0(ct_shp@data$STATEFP10, ct_shp@data$COUNTYFP10)
ct_shp2 <- sp::merge(x = ct_shp, y = ct_join, duplicateGeoms=TRUE)
HRC <- ct_shp2@data[ct_shp2@data$cand_name == "Hillary Clinton", ]
ct_shp2@data <- HRC
pal <- colorBin(palette = "BuPu", domain = ct_shp2$votes, bins = 8)
state_popup <- paste0("<strong>County: </strong>",
ct_shp2$county,
"<br><strong>Median Household Income: </strong>",
ct_shp2$med_house_income14,
"<br><strong>Average Female Income: </strong>",
ct_shp2$avg_female_income)
# plot the map
leaflet(data = ct_shp2) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(votes),
fillOpacity = 0.7,
color = "#BDBDC3",
weight = 1,
popup = state_popup) %>%
addLegend("bottomleft",
pal = pal,
values = ~votes,
title = "Total Votes",
opacity = 1)
View(ct_shp2)
ct_shp2 <- sp::merge(x = ct_shp, y = ct_join)
, duplicateGeoms=TRUE
ct_shp2 <- sp::merge(x = ct_shp, y = ct_join, duplicateGeoms=TRUE)
?mergege
?merge
ct_shp2 <- sp::merge(x = ct_shp, y = ct_join, by = "fips", all.x = F,
duplicateGeoms=F)
HRC <- ct_join[ct_join$cand_name == "Hillary Clinton", ]
View(HRC)
ct_shp2 <- sp::merge(x = ct_shp, y = HRC, by = "fips", all.x = F,
duplicateGeoms=F)
pal <- colorBin(palette = "BuPu", domain = ct_shp2$votes, bins = 8)
# pop values
state_popup <- paste0("<strong>County: </strong>",
ct_shp2$county,
"<br><strong>Median Household Income: </strong>",
ct_shp2$med_house_income14,
"<br><strong>Average Female Income: </strong>",
ct_shp2$avg_female_income)
# plot the map
leaflet(data = ct_shp2) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(votes),
fillOpacity = 0.7,
color = "#BDBDC3",
weight = 1,
popup = state_popup) %>%
addLegend("bottomleft",
pal = pal,
values = ~votes,
title = "Total Votes",
opacity = 1)
q()
